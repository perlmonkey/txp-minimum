<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/prettify/r224/prettify.js"></script>
<script>
	$(function () {
		// Google Code Prettify
		window.prettyPrint && prettyPrint();

		// initialise drawer
		var drawer = new hideShow('drawer-trigger');
	});

	// function hideShow() is the constructor for a hideShow widget
	function hideShow(id) {
		this.$id = $('#' + id);
		this.$region = $('#' + this.$id.attr('aria-controls'));
		this.toggleSpeed = 100;
		this.bindHandlers();
	}

	// function bindHandlers() is a member function to bind event handlers to the hideShow region
	hideShow.prototype.bindHandlers = function() {
		var thisObj = this;
		this.$id.click(function(e) {
			thisObj.toggleRegion();
			e.stopPropagation();
			return false;
		});
	}

	// function toggleRegion() is a member function to toggle the display of the hideShow region
	hideShow.prototype.toggleRegion = function() {
		var thisObj = this;

		// toggle the region
		this.$region.slideToggle(this.toggleSpeed, function() {
			// region is collapsed
			if ($(this).attr('aria-expanded') === 'false') { 
				// update the aria-expanded attribute of the region
				$(this).attr('aria-expanded', 'true');
				// update the button state
				thisObj.$id.attr('aria-pressed', 'true');
			}
			// region is expanded
			else {
				// update the aria-expanded attribute of the region
				$(this).attr('aria-expanded', 'false');
				// update the button state
				thisObj.$id.attr('aria-pressed', 'false');
			}
		});
	}
</script>